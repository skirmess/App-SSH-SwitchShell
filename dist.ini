name             = App-SSH-SwitchShell
author           = Sven Kirmess <sven.kirmess@kzone.ch>
license          = FreeBSD
copyright_holder = Sven Kirmess
copyright_year   = 2017

main_module      = bin/sshss
abstract         = sshss - Use your preferred shell and own home directory for shared SSH accounts

; version provider
[RewriteVersion] ; also munges

; choose files to include
[Git::GatherDir]                ; everything from git ls-files
include_dotfiles = 1            ; dotfiles will be removed by PruneCruft
exclude_filename = cpanfile     ; skip this generated file
exclude_filename = LICENSE      ; skip this generated file
exclude_filename = Makefile.PL  ; skip this generated file

[PruneCruft]        ; default stuff to skip
except = \.perltidyrc

[ManifestSkip]      ; if -f MANIFEST.SKIP, skip those, too

; generated files
[License]
[Pod2Readme]        ; from Pod (runs after PodWeaver)
source_filename = bin/sshss

; t tests
[Test::ReportPrereqs]   ; show prereqs in automated test output

; xt tests
[Test::MinimumVersion]  ; xt/release/minimum-version.t

[MetaTests]         ; xt/release/meta-yaml.t
[PodSyntaxTests]    ; xt/release/pod-syntax.t
[Test::Portability] ; xt/release/portability.t (of file name)
options = test_one_dot = 0
[Test::Version]     ; xt/release/test-version.t

; metadata
[AutoPrereqs]       ; find prereqs from code

[GithubMeta]        ; set META resources
issues = 1

[MetaProvides::Package] ; add 'provides' to META files
meta_noindex = 1        ; respect prior no_index directives

[Prereqs::AuthorDeps]   ; add authordeps as develop/requires
[MetaYAML]              ; generate META.yml (v1.4)
[MetaJSON]              ; generate META.json (v2)
[CPANFile]              ; generate cpanfile

; build system
[ExecDir]           ; include 'bin/*' as executables
[ShareDir]          ; include 'share/' for File::ShareDir
[MakeMaker]         ; create Makefile.PL

; manifest (after all generated files)
[Manifest]          ; create MANIFEST

; generate the README.pod file in the root of the repository
[ReadmeAnyFromPod]
source_filename = bin/sshss
type = pod
filename = README.pod
location = root

; copy generated files back to Git repository
[CopyFilesFromBuild]
copy = cpanfile
copy = LICENSE
copy = Makefile.PL

; before release
[Git::CheckFor::CorrectBranch] ; ensure on master branch

[OnlyCorePrereqs]
starting_version = 5.006002
phases = configure build runtime

[RunExtraTests]   ; ensure xt/ tests pass

[TestRelease]       ; ensure t/ tests pass
[ConfirmRelease]    ; prompt before uploading

; releaser
[UploadToCPAN]      ; uploads to CPAN

; NextRelease acts *during* pre-release to write $VERSION and
; timestamp to Changes and *after* release to add a new {{$NEXT}}
; section, so to act at the right time after release, it must actually
; come after Commit_Dirty_Files but before Commit_Changes in the
; dist.ini. It will still act during pre-release as usual

[NextRelease]
[BumpVersionAfterRelease]
