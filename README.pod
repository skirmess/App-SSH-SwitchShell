=pod

=head1 NAME

sshss - Use your preferred shell and own home directory for shared SSH accounts

=head1 SYNOPSIS

=over

=item B<sshss> [shell]

=back

=head1 DESCRIPTION

B<sshss> adds support to ease the pain of these dreadful shared accounts
prevalent at some organizations. All you have to do is add B<sshss> to
the I<command> string of the F<authorized_keys> file. B<sshss> lets you
define a different shell then the one defined in the passwd database for the
shared account and lets you define a different directory as your home
directory. You are most likely going to use a subdirectory of the shared
accounts home directory.

Both features, the personal home direcroy and the shell change, can be used
independently without using the other.

If you specify a new shell the shell is not only used as the interactive
shell but also if you directly run a command. This includes commands that
run over ssh like L<scp(1)|scp(1)> and L<rsync(1)|rsync(1)>. It's your
responsibility to not use an overly obscure shell that breaks these commands.

The used shell must support the I<-c> flag to run a command, which is used if
you run a command directly over SSH, including L<scp(1)|scp(1)> and L<rsync(1)|rsync(1)>.
This is the default used by SSH itself. If your shell would work with plain
SSH, it should also work with B<sshss>.

B<sshss> tries to behave as much as possible like the C<do_child> function
from F<session.c> from OpenSSH portable.

=head1 OPTIONS

=over

=item I<shell>

Specifies the shell to be used instead of the one specified in the
passwd database.

This can be used to overwrite the shell configured for a shared account. It
can also be used to change the shell for your personal account if your
organization does not have a supported way to change your shell.

If the shell is omitted, B<sshss> uses the default shell for the account
from the passwd database.

If the specified shell is not an absolute path, B<sshss> uses the default
shell for the account from the passwd database.

=back

=head1 EXIT STATUS

B<sshss> exits 1 if an error occurs until it can exec the shell. After
the exec the exit status depends on the executed shell or the comnnad run in
this shell.

=head1 EXAMPLES

=head2 B<Example 1> Change the shell to ksh93 and use a custom home directory

Create a directory to contain your own home directory. We create the
directory ~/.ryah in this example. Create a .ssh directory in your new custom
home directory and add the B<sshss> script to this directory. Add the
following command string in front of your ssh key in the
F<~/.ssh/authorized_keys> file:

  command="/home/admin/.ryah/.ssh/sshss /usr/bin/ksh93"

When you login over ssh with your key to the admin account,

=over

=item * your shell will be F</usr/bin/ksh93>, started as login shell

=item * the SHELL environment variable will be set to F</usr/bin/ksh93>

=item * the HOME environment varianle will be set to F</home/admin/.ryah>

=item * the working directory will be F</home/admin/.ryah>

=back

=head2 B<Example 2> Change the shell to ksh93 without changing the home directory

Add the B<sshss> script to e.g. the F<~/.ssh> directory or any other
directory. B<sshss> only changes the home directory if it is run from
inside a F<.ssh> directory outside of the current home directory.

Add the following command string in front of your ssh key in the
F<~/.ssh/authorized_keys> file:

  command="/home/admin/.ssh/sshss /usr/bin/ksh93"

When you login over ssh with your key to the admin account,

=over

=item * your shell will be F</usr/bin/ksh93>, started as login shell

=item * the SHELL environment variable will be set to F</usr/bin/ksh93>

=back

=head2 B<Example 3> Use a custom home directory

Create a directory to contain your own home directory. We create the
directory ~/.ryah in this example. Create a .ssh directory in your new custom
home directory and add the B<sshss> script to this directory. Add the
following command string in front of your ssh key in the
F<~/.ssh/authorized_keys> file:

  command="/home/admin/.ryah/.ssh/sshss"

When you login over ssh with your key to the admin account,

=over

=item * your shell will be the shell defined in the passwd database, started as
login shell. If the shell specified in the passwd database is empty or
invalid, F</bin/sh> is used instead.

=item * the SHELL environment variable will be set to the shell defined in the
passwd database. If the shell specified in the passwd database is empty or
invalid, the SHELL environment variable is set to F</bin/sh> instead.

=item * the HOME environment varianle will be set to F</home/admin/.ryah>

=item * the working directory will be F</home/admin/.ryah>

=back

=head1 ENVIRONMENT

=over

=item HOME

If B<sshss> is placed in an F<.ssh> directory, the HOME environment
variable is set to the parent directory of this F<.ssh> directory. Then, the
working directory is changed to this new home directory.

Otherwise the HOME environment variable is not used, nor is the working
directory changed.

=item SHELL

The environment variable SHELL is set to the shell that is either used as
interactive shell or that is used to execute the command.

=back

=head1 SEE ALSO

L<passwd(4)|passwd(4)>, L<sshd(1)/AUTHORIZED_KEYS FILE FORMAT>

=head1 AUTHOR

Sven Kirmess <sven.kirmess@kzone.ch>

=head1 COPYRIGHT AND LICENSE

This software is Copyright (c) 2017 by Sven Kirmess.

This is free software, licensed under:

  The (two-clause) FreeBSD License

=cut
